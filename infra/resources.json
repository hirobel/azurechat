{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.25.53.49325",
      "templateHash": "17017747683547350414"
    }
  },
  "parameters": {
    "name": {
      "type": "string",
      "defaultValue": "azurechat-demo"
    },
    "resourceToken": {
      "type": "string"
    },
    "speechServiceSkuName": {
      "type": "string",
      "defaultValue": "S0"
    },
    "formRecognizerSkuName": {
      "type": "string",
      "defaultValue": "S0"
    },
    "searchServiceSkuName": {
      "type": "string",
      "defaultValue": "standard"
    },
    "searchServiceIndexName": {
      "type": "string",
      "defaultValue": "azure-chat"
    },
    "storageServiceSku": {
      "type": "object"
    },
    "storageServiceImageContainerName": {
      "type": "string"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "nextAuthHash": {
      "type": "securestring",
      "defaultValue": "[uniqueString(newGuid())]"
    },
    "tags": {
      "type": "object",
      "defaultValue": {}
    }
  },
  "variables": {
    "form_recognizer_name": "[toLower(format('{0}-form-{1}', parameters('name'), parameters('resourceToken')))]",
    "speech_service_name": "[toLower(format('{0}-speech-{1}', parameters('name'), parameters('resourceToken')))]",
    "cosmos_name": "[toLower(format('{0}-cosmos-{1}', parameters('name'), parameters('resourceToken')))]",
    "search_name": "[toLower(format('{0}search{1}', parameters('name'), parameters('resourceToken')))]",
    "webapp_name": "[toLower(format('{0}-webapp-{1}', parameters('name'), parameters('resourceToken')))]",
    "appservice_name": "[toLower(format('{0}-app-{1}', parameters('name'), parameters('resourceToken')))]",
    "storage_prefix": "[take(parameters('name'), 8)]",
    "storage_name": "[toLower(format('{0}sto{1}', variables('storage_prefix'), parameters('resourceToken')))]",
    "kv_prefix": "[take(parameters('name'), 7)]",
    "keyVaultName": "[toLower(format('{0}-kv-{1}', variables('kv_prefix'), parameters('resourceToken')))]",
    "la_workspace_name": "[toLower(format('{0}-la-{1}', parameters('name'), parameters('resourceToken')))]",
    "diagnostic_setting_name": "AppServiceConsoleLogs",
    "keyVaultSecretsOfficerRole": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b86a8fe4-44ce-4948-aee5-eccb2c155cd7')]",
    "validStorageServiceImageContainerName": "[toLower(replace(parameters('storageServiceImageContainerName'), '-', ''))]",
    "databaseName": "chat",
    "historyContainerName": "history",
    "configContainerName": "config"
  },
  "resources": [
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2020-06-01",
      "name": "[format('{0}/{1}', variables('webapp_name'), 'logs')]",
      "properties": {
        "applicationLogs": {
          "fileSystem": {
            "level": "Verbose"
          }
        },
        "detailedErrorMessages": {
          "enabled": true
        },
        "failedRequestsTracing": {
          "enabled": true
        },
        "httpLogs": {
          "fileSystem": {
            "enabled": true,
            "retentionInDays": 1,
            "retentionInMb": 35
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('webapp_name'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-06-01-preview",
      "name": "[format('{0}/{1}', variables('keyVaultName'), 'NEXTAUTH-SECRET')]",
      "properties": {
        "contentType": "text/plain",
        "value": "[parameters('nextAuthHash')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-06-01-preview",
      "name": "[format('{0}/{1}', variables('keyVaultName'), 'AZURE-COSMOSDB-KEY')]",
      "properties": {
        "contentType": "text/plain",
        "value": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmos_name')), '2023-04-15').secondaryMasterKey]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmos_name'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-06-01-preview",
      "name": "[format('{0}/{1}', variables('keyVaultName'), 'AZURE-DOCUMENT-INTELLIGENCE-KEY')]",
      "properties": {
        "contentType": "text/plain",
        "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', variables('form_recognizer_name')), '2023-05-01').key1]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('form_recognizer_name'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-06-01-preview",
      "name": "[format('{0}/{1}', variables('keyVaultName'), 'AZURE-SPEECH-KEY')]",
      "properties": {
        "contentType": "text/plain",
        "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', variables('speech_service_name')), '2023-05-01').key1]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('speech_service_name'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-06-01-preview",
      "name": "[format('{0}/{1}', variables('keyVaultName'), 'AZURE-SEARCH-API-KEY')]",
      "properties": {
        "contentType": "text/plain",
        "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices', variables('search_name')), '2022-09-01').secondaryKey]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "[resourceId('Microsoft.Search/searchServices', variables('search_name'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-06-01-preview",
      "name": "[format('{0}/{1}', variables('keyVaultName'), 'AZURE-STORAGE-ACCOUNT-KEY')]",
      "properties": {
        "contentType": "text/plain",
        "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storage_name')), '2022-05-01').keys[0].value]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_name'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2022-05-01",
      "name": "[format('{0}/{1}/{2}', variables('storage_name'), 'default', variables('validStorageServiceImageContainerName'))]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storage_name'), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2022-05-01",
      "name": "[format('{0}/{1}', variables('storage_name'), 'default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_name'))]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2020-06-01",
      "name": "[variables('appservice_name')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "reserved": true
      },
      "sku": {
        "name": "P0v3",
        "tier": "Premium0V3",
        "size": "P0v3",
        "family": "Pv3",
        "capacity": 1
      },
      "kind": "linux"
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2020-06-01",
      "name": "[variables('webapp_name')]",
      "location": "[parameters('location')]",
      "tags": "[union(parameters('tags'), createObject('azd-service-name', 'frontend'))]",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appservice_name'))]",
        "httpsOnly": true,
        "siteConfig": {
          "linuxFxVersion": "node|18-lts",
          "alwaysOn": true,
          "appCommandLine": "next start",
          "ftpsState": "Disabled",
          "minTlsVersion": "1.2",
          "appSettings": [
            {
              "name": "SCM_DO_BUILD_DURING_DEPLOYMENT",
              "value": "true"
            },
            {
              "name": "NEXTAUTH_SECRET",
              "value": "[format('@Microsoft.KeyVault(VaultName={0};SecretName={1})', variables('keyVaultName'), 'NEXTAUTH-SECRET')]"
            },
            {
              "name": "NEXTAUTH_URL",
              "value": "[format('https://{0}.azurewebsites.net', variables('webapp_name'))]"
            },
            {
              "name": "AZURE_COSMOSDB_URI",
              "value": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmos_name')), '2023-04-15').documentEndpoint]"
            },
            {
              "name": "AZURE_COSMOSDB_KEY",
              "value": "[format('@Microsoft.KeyVault(VaultName={0};SecretName={1})', variables('keyVaultName'), 'AZURE-COSMOSDB-KEY')]"
            },
            {
              "name": "AZURE_SEARCH_API_KEY",
              "value": "[format('@Microsoft.KeyVault(VaultName={0};SecretName={1})', variables('keyVaultName'), 'AZURE-SEARCH-API-KEY')]"
            },
            {
              "name": "AZURE_SEARCH_NAME",
              "value": "[variables('search_name')]"
            },
            {
              "name": "AZURE_SEARCH_INDEX_NAME",
              "value": "[parameters('searchServiceIndexName')]"
            },
            {
              "name": "AZURE_DOCUMENT_INTELLIGENCE_ENDPOINT",
              "value": "[format('https://{0}.cognitiveservices.azure.com/', variables('form_recognizer_name'))]"
            },
            {
              "name": "AZURE_DOCUMENT_INTELLIGENCE_KEY",
              "value": "[format('@Microsoft.KeyVault(VaultName={0};SecretName={1})', variables('keyVaultName'), 'AZURE-DOCUMENT-INTELLIGENCE-KEY')]"
            },
            {
              "name": "AZURE_SPEECH_REGION",
              "value": "[parameters('location')]"
            },
            {
              "name": "AZURE_SPEECH_KEY",
              "value": "[format('@Microsoft.KeyVault(VaultName={0};SecretName={1})', variables('keyVaultName'), 'AZURE-SPEECH-KEY')]"
            },
            {
              "name": "AZURE_STORAGE_ACCOUNT_NAME",
              "value": "[variables('storage_name')]"
            },
            {
              "name": "AZURE_STORAGE_ACCOUNT_KEY",
              "value": "[format('@Microsoft.KeyVault(VaultName={0};SecretName={1})', variables('keyVaultName'), 'AZURE-STORAGE-ACCOUNT-KEY')]"
            }
          ]
        }
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appservice_name'))]",
        "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), 'AZURE-COSMOSDB-KEY')]",
        "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), 'AZURE-DOCUMENT-INTELLIGENCE-KEY')]",
        "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), 'AZURE-SEARCH-API-KEY')]",
        "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), 'AZURE-SPEECH-KEY')]",
        "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), 'AZURE-STORAGE-ACCOUNT-KEY')]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmos_name'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), 'NEXTAUTH-SECRET')]"
      ]
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2021-12-01-preview",
      "name": "[variables('la_workspace_name')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.Web/sites/{0}', variables('webapp_name'))]",
      "name": "[variables('diagnostic_setting_name')]",
      "properties": {
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('la_workspace_name'))]",
        "logs": [
          {
            "category": "AppServiceConsoleLogs",
            "enabled": true
          }
        ],
        "metrics": []
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('la_workspace_name'))]",
        "[resourceId('Microsoft.Web/sites', variables('webapp_name'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-04-01-preview",
      "scope": "[format('Microsoft.KeyVault/vaults/{0}', variables('keyVaultName'))]",
      "name": "[guid(resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName')), variables('webapp_name'), variables('keyVaultSecretsOfficerRole'))]",
      "properties": {
        "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('webapp_name')), '2020-06-01', 'full').identity.principalId]",
        "principalType": "ServicePrincipal",
        "roleDefinitionId": "[variables('keyVaultSecretsOfficerRole')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "[resourceId('Microsoft.Web/sites', variables('webapp_name'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2021-06-01-preview",
      "name": "[variables('keyVaultName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[subscription().tenantId]",
        "enableRbacAuthorization": true,
        "enabledForDeployment": false,
        "enabledForDiskEncryption": true,
        "enabledForTemplateDeployment": false
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2023-04-15",
      "name": "[variables('cosmos_name')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "kind": "GlobalDocumentDB",
      "properties": {
        "databaseAccountOfferType": "Standard",
        "locations": [
          {
            "locationName": "[parameters('location')]",
            "failoverPriority": 0
          }
        ],
        "disableKeyBasedMetadataWriteAccess": true
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2022-05-15",
      "name": "[format('{0}/{1}', variables('cosmos_name'), variables('databaseName'))]",
      "properties": {
        "resource": {
          "id": "[variables('databaseName')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmos_name'))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2022-05-15",
      "name": "[format('{0}/{1}/{2}', variables('cosmos_name'), variables('databaseName'), variables('historyContainerName'))]",
      "properties": {
        "resource": {
          "id": "[variables('historyContainerName')]",
          "partitionKey": {
            "paths": [
              "/userId"
            ],
            "kind": "Hash"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmos_name'), variables('databaseName'))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2022-05-15",
      "name": "[format('{0}/{1}/{2}', variables('cosmos_name'), variables('databaseName'), variables('configContainerName'))]",
      "properties": {
        "resource": {
          "id": "[variables('configContainerName')]",
          "partitionKey": {
            "paths": [
              "/userId"
            ],
            "kind": "Hash"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmos_name'), variables('databaseName'))]"
      ]
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2023-05-01",
      "name": "[variables('form_recognizer_name')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "kind": "FormRecognizer",
      "properties": {
        "customSubDomainName": "[variables('form_recognizer_name')]",
        "publicNetworkAccess": "Enabled"
      },
      "sku": {
        "name": "[parameters('formRecognizerSkuName')]"
      }
    },
    {
      "type": "Microsoft.Search/searchServices",
      "apiVersion": "2022-09-01",
      "name": "[variables('search_name')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "partitionCount": 1,
        "publicNetworkAccess": "enabled",
        "replicaCount": 1
      },
      "sku": {
        "name": "[parameters('searchServiceSkuName')]"
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2023-05-01",
      "name": "[variables('speech_service_name')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "kind": "SpeechServices",
      "properties": {
        "customSubDomainName": "[variables('speech_service_name')]",
        "publicNetworkAccess": "Enabled"
      },
      "sku": {
        "name": "[parameters('speechServiceSkuName')]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-05-01",
      "name": "[variables('storage_name')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "kind": "StorageV2",
      "sku": "[parameters('storageServiceSku')]"
    }
  ],
  "outputs": {
    "url": {
      "type": "string",
      "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/sites', variables('webapp_name')), '2020-06-01').defaultHostName)]"
    }
  }
}